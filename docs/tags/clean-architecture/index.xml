<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clean Architecture on doc site</title>
    <link>https://pureone-t.github.io/doc-site/tags/clean-architecture/</link>
    <description>Recent content in Clean Architecture on doc site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Sep 2018 14:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://pureone-t.github.io/doc-site/tags/clean-architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>クリーンアーキテクチャ</title>
      <link>https://pureone-t.github.io/doc-site/posts/common/design/00001/</link>
      <pubDate>Tue, 04 Sep 2018 14:00:00 +0900</pubDate>
      
      <guid>https://pureone-t.github.io/doc-site/posts/common/design/00001/</guid>
      <description>Robert C. Martin
クリーンアーキテクチャ  ビジネスロジックの本質（業務上の関心） 入出力処理等の副作用の隔離  クリーンアーキテクチャにおける方針 ビジネスロジックの明確化 フレームワークからの独立 外界との独立（ストアからの独立、UIからの独立）
イントロダクション  ソフトウェアを「一度だけ」動かすのは、難しいことではない ソフトウェアを「正しく」動かすのは、とても難しい
 ソフトウェアを正しくすると以下のようなことが発生する
 大量のエンジニアが不要になる 課題の管理が不要になる 欠陥（バグ）が減る 変更が容易になる 労力が最小になり、機能性と柔軟性は最大になる   アーキテクチャ  アーキテクチャの魅力は構造である 重要性は変更コストで表現できる プログラムの構成要素をどのように組み立てるか  設計とアーキテクチャ  両者に違いはない ソフトウェアアーキテクチャの目的は、システム開発・保守するための人材を必要最小限にすること  数値で見る崩壊とエンジニアの給料  リリースごとに生産性は低下、エンジニアの給与は増加  価値  完璧に動作するが変更できないソフトウェア（振る舞い） 完璧に動作しないが変更できるソフトウェア（アーキテクチャ）
 ソフトウェア＝ソフトであるべき
 アイゼンハワーのマトリクス
 振る舞いは、緊急だが重要ではない アーキテクチャは、緊急ではないが重要である よくある間違いは、緊急だが重要ではないタスクを最優先してしまうこと   ソフトウェアアーキテクト  機能よりもその構造を重要視する 機能を簡単に開発・変更・拡張できる構造（アーキテクチャ）を構築する
 コンポーネントの分離
 データ管理
 機能
 ソフトウェアは科学である
 テストはバグが存在しないことを実証できないが、バグが存在することは実証できる つまり反証可能なモジュール単位としての構造が大事   ポリモーフィズムの利点＝依存関係逆転の原則  上位レベルの関数が下位レベルの関数を呼び出す場合、依存関係は 上位 -&amp;gt; 下位 だが、インタフェースを使用することで、下位 -&amp;gt; 上位 に依存する ビジネスルールがUI、DBに依存するのではなく、UI、DBがビジネスルールに依存するが正しい  UI -&amp;gt; Business Rle &amp;lt;- DB 依存関係逆転の原則は、ビジネスルールへの依存を制御する 独立デプロイ可能性  OOは、ポリモーフィズムを使用してソースコードの依存関係を制御する能力のこと  関数型プログラミング  不変性</description>
    </item>
    
  </channel>
</rss>