<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on doc site</title>
    <link>https://pureone-tcy.github.io/doc-site/tags/redis/</link>
    <description>Recent content in Redis on doc site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Mar 2019 23:14:00 +0900</lastBuildDate>
    
	<atom:link href="https://pureone-tcy.github.io/doc-site/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis Clients Handling</title>
      <link>https://pureone-tcy.github.io/doc-site/posts/devops/db/00002/</link>
      <pubDate>Sun, 24 Mar 2019 23:14:00 +0900</pubDate>
      
      <guid>https://pureone-tcy.github.io/doc-site/posts/devops/db/00002/</guid>
      <description> https://redis.io/topics/clients
クライアント接続について  設定された待ち受けTCPポートとUnixソケットが有効になっているとクライアント接続が可能になる クライアントソケットはノンブロッキング状態になる TCP_NODELAYオプションは、接続に遅延がないように設定される(?) クライアントが初期化された後、同時に処理できるクライアント数の制限に達しているか確認する  maxclinets構成ディレクティブを使用する    </description>
    </item>
    
    <item>
      <title>AWS Elastic Cash Redis</title>
      <link>https://pureone-tcy.github.io/doc-site/posts/devops/redis/00002/</link>
      <pubDate>Mon, 26 Nov 2018 15:00:00 +0900</pubDate>
      
      <guid>https://pureone-tcy.github.io/doc-site/posts/devops/redis/00002/</guid>
      <description> Redis構築 EC2構築 // TODO $ CLI  GNU コンパイラコレクション (gcc) をインストール
$ sudo yum install gcc  $ wget http://download.redis.io/redis-stable.tar.gz $ tar xvzf redis-stable.tar.gz $ cd redis-stable $ make  $ src/redis-cli -c -h redissample.ezre9w.0001.apne1.cache.amazonaws.com -p 6379  </description>
    </item>
    
    <item>
      <title>Redis入門</title>
      <link>https://pureone-tcy.github.io/doc-site/posts/devops/redis/00001/</link>
      <pubDate>Wed, 21 Nov 2018 15:00:00 +0900</pubDate>
      
      <guid>https://pureone-tcy.github.io/doc-site/posts/devops/redis/00001/</guid>
      <description> Redisコマンドリファレンス
メモリ消費量の削減アプローチ 短いデータ構造ziplist シャーディング ビットバイトのパッキング スケール </description>
    </item>
    
  </channel>
</rss>